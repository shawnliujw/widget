<?xml version="1.0" encoding="UTF-8"?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mpupa.model.as">

<resultMap type="java.util.Map" id="flash_retailer_map">
	
</resultMap>
	
	<select id="searchProductsForAs" parameterType="java.util.Map" resultType="ProductModel">
	
	select p.id as productId,p.product_name as productName,p.product_breakdown_1 as productBreakdown1,p.product_breakdown_2 as productBreakdown2
,p.product_breakdown_3 as productBreakdown3,p.product_breakdown_4 as productBreakdown4,p.weight_vol as weightVol,p.package_quantity as packageQuantity
,p.unit_weight_vol as unitWeightVol,p.img_url as imageUrl,r.price_now as nowPrice,r.price_was as wasPrice,r.product_url as productUrl,o.name as offerName,o.id as offerId
 from product p
left join product_retailer r on p.id=r.product_id 
 left join offer o on o.id=r.offer_id 
left join retailer t on r.retailer_id=t.id 
left join brand br on br.id=p.brand_id 
where  br.name=#{brandName}   and t.valid='0' and p.valid='0' and r.in_stock='0'  and t.name=#{retailerName}
and p.id in 
(select product_id from widget_kellogg wk left join category c on c.id=wk.category_id
where c.name=#{categoryName}) group by p.id order by p.product_name
	 
	  
	</select>
	
	<select id="searchYoutubeLink" parameterType="String" resultType="String">
	
		select distinct(w.youtube_url) from widget_kellogg w left join category c on c.id=w.category_id 
where c.name=#{categoryName}
	</select>
	
	<select id="searchFlashRetailer" parameterType="java.util.Map" resultType="String">
		select r.name 
from product_retailer pr left join retailer r on r.id=pr.retailer_id 
left join product p on pr.product_id=p.id
left join brand b on p.brand_id=b.id
where pr.product_id in 
(select product_id from widget_kellogg wk left join category c on c.id=wk.category_id
where c.name=#{categoryName}) and b.name=#{brandName} and p.valid='0' group by r.name 
	</select>
	
</mapper>